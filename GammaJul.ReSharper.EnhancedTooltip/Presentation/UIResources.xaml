<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:jui="urn:schemas-jetbrains-com:jetbrains-ui-avalon"
	xmlns:resources="urn:shemas-jetbrains-com:ui-application-icons-altering-featu"
	xmlns:theming="clr-namespace:JetBrains.Platform.VisualStudio.SinceVs11.Shell.Theming;assembly=JetBrains.Platform.VisualStudio.SinceVs11"
	xmlns:controls="clr-namespace:JetBrains.UI.Avalon.Controls;assembly=JetBrains.Platform.UI"
	xmlns:richText="clr-namespace:JetBrains.UI.RichText;assembly=JetBrains.Platform.Util"
	xmlns:local="clr-namespace:GammaJul.ReSharper.EnhancedTooltip.Presentation">

	<local:FontSizeScaleConverter Scale="0.9" x:Key="MediumFontSizeConverter" />
	<local:FontSizeScaleConverter Scale="0.8" x:Key="SmallFontSizeConverter" />

	<!-- Style for VS listbox item inside the tooltip -->
	<Style x:Key="QuickInfoItemStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Margin" Value="0,0,0,2" />
		<Setter Property="Padding" Value="0" />
	</Style>

	<!-- Style for VS listbox item's data inside the tooltip -->
  <DataTemplate x:Key="QuickInfoItemDataTemplate">
    <Border BorderThickness="1"
			BorderBrush="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}"
			Background="{Binding Path=(local:Styling.ItemTemplateBackground), RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
			<!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
			<ContentPresenter Content="{Binding VisualElement}" Margin="8,6" />
		</Border>
	</DataTemplate>

	<!-- Style for VS listbox inside the tooltip -->
	<Style x:Key="QuickInfoListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="{Binding PresenterStyle.BorderBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Control.Padding}">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Style for a "group" inside the tooltip" -->
	<Style x:Key="HeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}">
		<Style.Resources>

			<local:DescriptionSeparatorWidthConverter x:Key="DescriptionSeparatorWidthConverter" />
			
			<!-- Style for an identifier -->
			<DataTemplate DataType="{x:Type local:IdentifierTooltipContent}">
				<StackPanel x:Name="Root" Orientation="Vertical" Margin="0,1">

					<DockPanel Margin="0">
						<Border DataContext="{Binding Icon}">
							<jui:ThemedIconViewImage x:Name="IconPresenter" Stretch="Uniform"
								Margin="0,0,4,0" local:IconScaling.IsScalingWithFontSize="True"
								DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
						</Border>
						<local:IdentifierPresenter
							IdentifierText="{Binding Text}" OverloadCount="{Binding OverloadCount}"
							TextWrapping="Wrap" VerticalAlignment="Center" />
					</DockPanel>

					<StackPanel x:Name="SuperTypesPresenter" Orientation="Vertical">
						
						<local:DashedSeparator StrokeThickness="1" StrokeDashArray="3,3" Margin="-8,6" RenderOptions.EdgeMode="Aliased"
							Stroke="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}" />

						<DockPanel x:Name="BaseTypePresenter" Margin="0,2,0,0">
							<Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,4,0" VerticalAlignment="Top" DockPanel.Dock="Left">
								<TextBlock Text="Inherits" Margin="2" Foreground="Gray" FontWeight="Bold" VerticalAlignment="Center"
									FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={StaticResource SmallFontSizeConverter}}" />
							</Border>
							<controls:RichTextPresenter TextWrapping="Wrap" VerticalAlignment="Center"
								RichText="{Binding BaseType}" Margin="0,0,0,1" />
						</DockPanel>

						<ItemsControl x:Name="ImplementedInterfacesPresenter" ItemsSource="{Binding ImplementedInterfaces}" Grid.IsSharedSizeScope="True">
							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="{x:Type richText:RichText}">

									<DockPanel Margin="0,2,0,0">
										<Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,4,0" VerticalAlignment="Top" DockPanel.Dock="Left">
											<TextBlock Text="Implements" Margin="2" Foreground="Gray" FontWeight="Bold" VerticalAlignment="Center"
												FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={StaticResource SmallFontSizeConverter}}" />
										</Border>
										<controls:RichTextPresenter TextWrapping="Wrap" VerticalAlignment="Center"
											RichText="{Binding}" Margin="0,0,0,1" />
									</DockPanel>

								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>

					</StackPanel>
					
					<StackPanel x:Name="DescriptionPresenter" Orientation="Vertical" Margin="0,0,0,6">
						<local:DashedSeparator StrokeThickness="1" StrokeDashArray="3,3" Margin="-8,6" RenderOptions.EdgeMode="Aliased"
							Stroke="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}" />
						<local:AutoContrastedRichTextPresenter Margin="0" TextWrapping="Wrap"
							RichText="{Binding Description}" />
					</StackPanel>

					<DockPanel x:Name="ObsoletePresenter" Margin="0,2,0,0">
						<Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,4,0" VerticalAlignment="Top" DockPanel.Dock="Left">
							<TextBlock Text="Obsolete" Margin="2" Foreground="Gray" FontWeight="Bold" VerticalAlignment="Center"
								FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={StaticResource SmallFontSizeConverter}}" />
						</Border>
						<local:AutoContrastedRichTextPresenter TextWrapping="Wrap" VerticalAlignment="Center"
							RichText="{Binding Obsolete}" Margin="0,0,0,1" />
					</DockPanel>

					<ItemsControl x:Name="ExceptionsPresenter" ItemsSource="{Binding Exceptions}" Grid.IsSharedSizeScope="True">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type local:ExceptionContent}">

								<DockPanel Margin="0,2,0,0">
									<StackPanel Orientation="Horizontal" VerticalAlignment="Top" DockPanel.Dock="Left">
										<Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,4,0" VerticalAlignment="Center">
											<TextBlock Text="Throws" Margin="2" Foreground="Gray" FontWeight="Bold"
												FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={StaticResource SmallFontSizeConverter}}" />
										</Border>
										<TextBlock Text="{Binding Exception}" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,0,0,1" />
										<TextBlock Text=" → " FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,0,1" />
									</StackPanel>

									<local:AutoContrastedRichTextPresenter TextWrapping="Wrap" VerticalAlignment="Center"
										RichText="{Binding Description}" Margin="0,0,0,1" />

								</DockPanel>

							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

				</StackPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
						<Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Description}" Value="{x:Null}">
						<Setter TargetName="DescriptionPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding BaseType}" Value="{x:Null}">
						<Setter TargetName="BaseTypePresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding HasItems, ElementName=ImplementedInterfacesPresenter}" Value="False">
						<Setter TargetName="ImplementedInterfacesPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding BaseType}" Value="{x:Null}" />
							<Condition Binding="{Binding HasItems, ElementName=ImplementedInterfacesPresenter}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter TargetName="SuperTypesPresenter" Property="Visibility" Value="Collapsed" />
					</MultiDataTrigger>
					<DataTrigger Binding="{Binding Obsolete}" Value="{x:Null}">
						<Setter TargetName="ObsoletePresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding HasItems, ElementName=ExceptionsPresenter}" Value="False">
						<Setter TargetName="ExceptionsPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding Obsolete}" Value="{x:Null}" />
							<Condition Binding="{Binding HasItems, ElementName=ExceptionsPresenter}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter TargetName="DescriptionPresenter" Property="Margin" Value="0" />
					</MultiDataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>

			<!-- Style for a parameter role -->
			<DataTemplate DataType="{x:Type local:ArgumentRoleTooltipContent}">
				<StackPanel x:Name="Root" Orientation="Vertical" Margin="0,1">

					<DockPanel Margin="0">
						<Border DataContext="{Binding Icon}">
							<jui:ThemedIconViewImage x:Name="IconPresenter" Stretch="Uniform"
								Margin="0,0,4,0" local:IconScaling.IsScalingWithFontSize="True"
								DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
						</Border>
						<controls:RichTextPresenter
							RichText="{Binding Text}"
							TextWrapping="Wrap" VerticalAlignment="Center" />
					</DockPanel>

					<StackPanel x:Name="DescriptionPresenter" Orientation="Vertical">
						<local:DashedSeparator StrokeThickness="1" StrokeDashArray="3,3" Margin="-8,6" RenderOptions.EdgeMode="Aliased"
							Stroke="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}" />
						<local:AutoContrastedRichTextPresenter Margin="0" TextWrapping="Wrap"
							RichText="{Binding Description}" />
					</StackPanel>
				</StackPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
						<Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Description}" Value="{x:Null}">
						<Setter TargetName="DescriptionPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>

			<!-- Style for an issue -->
			<DataTemplate DataType="{x:Type local:IssueTooltipContent}">
				<DockPanel Margin="0,1">
					<Border DataContext="{Binding Icon}">
						<jui:ThemedIconViewImage x:Name="IconPresenter" Stretch="Uniform"
							Margin="0,0,4,0" local:IconScaling.IsScalingWithFontSize="True"
							DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
					</Border>
					<controls:RichTextPresenter TextWrapping="Wrap"
						RichText="{Binding Text}" VerticalAlignment="Center" />
				</DockPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
						<Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>

			<!-- Style for other content -->
			<DataTemplate DataType="{x:Type local:MiscTooltipContent}">
				<local:AutoContrastedRichTextPresenter Margin="0,1" TextWrapping="Wrap"
					RichText="{Binding Text}" VerticalAlignment="Center" />
			</DataTemplate>

			<!-- Style for VS squiggle content -->
			<DataTemplate DataType="{x:Type local:VsSquiggleContent}">
				<DockPanel Margin="0,1">
					<Border DataContext="{x:Static resources:BulbThemedIcons+YellowBulbVS.Id}">
						<jui:ThemedIconViewImage x:Name="IconPresenter" Stretch="Uniform"
							Margin="0,0,4,0" local:IconScaling.IsScalingWithFontSize="True"
							DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
					</Border>
					<ContentPresenter VerticalAlignment="Center" Content="{Binding Content}" />
				</DockPanel>
			</DataTemplate>

			<!-- Style for VS identifier content -->
			<DataTemplate DataType="{x:Type local:VsIdentifierContent}">
				<ContentPresenter Content="{Binding Content}" Margin="0,1" />
			</DataTemplate>

		</Style.Resources>

		<Setter Property="Margin" Value="0" />
		<Setter Property="local:Styling.ShouldStyleParentListBox" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type HeaderedContentControl}">
					<ContentPresenter />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>