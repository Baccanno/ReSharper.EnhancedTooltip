<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:theming="clr-namespace:JetBrains.VsIntegration.SinceVs11.Theming;assembly=JetBrains.Platform.ReSharper.VisualStudio.SinceVs11"
	xmlns:controls="clr-namespace:JetBrains.UI.Avalon.Controls;assembly=JetBrains.Platform.ReSharper.UI"
	xmlns:jui="urn:schemas-jetbrains-com:jetbrains-ui-avalon"
	xmlns:local="clr-namespace:GammaJul.ReSharper.EnhancedTooltip.Presentation">

	<!-- Style for VS listbox item inside the tooltip -->
	<Style x:Key="QuickInfoItemStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="0,0,0,2" />
		<Setter Property="Padding" Value="0" />
	</Style>

	<!-- Style for VS listbox item's data inside the tooltip -->
	<DataTemplate x:Key="QuickInfoItemDataTemplate">
		<Border BorderThickness="1"
			BorderBrush="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}"
			Background="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowTabSelectedTabBrushKey}}">
			<!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
			<ContentPresenter Content="{Binding VisualElement}" Margin="8,6" />
		</Border>
	</DataTemplate>

	<!-- Style for VS listbox inside the tooltip -->
	<Style x:Key="QuickInfoListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="{Binding PresenterStyle.BorderBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Control.Padding}">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Style for a "group" inside the tooltip" -->
	<Style x:Key="HeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}">
		<Style.Resources>

			<!-- Style for an identifier -->
			<DataTemplate DataType="{x:Type local:IdentifierTooltipContent}">
				<StackPanel x:Name="Root" TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="ClearType">
					
					<DockPanel Margin="0">
						<Border DataContext="{Binding Icon}">
							<jui:ThemedIconViewImage x:Name="IconPresenter" Stretch="Uniform"
								Margin="0,0,4,0" local:IconScaling.IsScalingWithFontSize="True"
								DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
						</Border>
						<controls:RichTextPresenter TextWrapping="Wrap" IsAutoContrasted="False"
							RichText="{Binding Text}" VerticalAlignment="Center" />
					</DockPanel>

					<StackPanel x:Name="DescriptionPresenter" Orientation="Vertical">
						<Path StrokeThickness="1" StrokeDashArray="3,3" RenderOptions.EdgeMode="Aliased"
							Data="M0,0 H10" Margin="-8,6" Stretch="Uniform"
							Stroke="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}" />
						<controls:RichTextPresenter Margin="0" TextWrapping="Wrap" IsAutoContrasted="True"
							RichText="{Binding Description}" />
					</StackPanel>

					<StackPanel x:Name="ObsoletePresenter" Orientation="Horizontal" Margin="0,6,0,0">
						<Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,4,0">
							<TextBlock Text="Obsolete" Margin="2" Foreground="Gray" FontWeight="Bold" VerticalAlignment="Center"
								FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={x:Static local:SmallFontConverter.Instance}}" />
						</Border>
						<controls:RichTextPresenter TextWrapping="Wrap" IsAutoContrasted="True"
							RichText="{Binding Obsolete}" />
					</StackPanel>

					<ItemsControl x:Name="ExceptionsPresenter" ItemsSource="{Binding Exceptions}" Margin="0,6,0,0" Grid.IsSharedSizeScope="True">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type local:ExceptionContent}">
								<Grid Margin="0,2,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,4,0" Grid.Column="0">
										<TextBlock Text="Exception" Margin="2" Foreground="Gray" FontWeight="Bold"
											FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={x:Static local:SmallFontConverter.Instance}}" />
									</Border>
									<TextBlock Text="{Binding Exception}" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" />
									<TextBlock Text=" → " FontWeight="Bold" Grid.Column="2" VerticalAlignment="Center" />
									<controls:RichTextPresenter TextWrapping="Wrap" IsAutoContrasted="True" VerticalAlignment="Center" Grid.Column="3"
										RichText="{Binding Description}" />
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

				</StackPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
						<Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Description}" Value="{x:Null}">
						<Setter TargetName="DescriptionPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Obsolete}" Value="{x:Null}">
						<Setter TargetName="ObsoletePresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Path=HasItems, ElementName=ExceptionsPresenter}" Value="False">
						<Setter TargetName="ExceptionsPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>

			<!-- Style for an issue -->
			<DataTemplate DataType="{x:Type local:IssueTooltipContent}">
				<DockPanel>
					<Border DataContext="{Binding Icon}">
						<jui:ThemedIconViewImage x:Name="IconPresenter" Stretch="Uniform"
							Margin="0,0,4,0" local:IconScaling.IsScalingWithFontSize="True"
							DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
					</Border>
					<controls:RichTextPresenter TextWrapping="Wrap" IsAutoContrasted="False"
						RichText="{Binding Text}" VerticalAlignment="Center" />
				</DockPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
						<Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>

			<!-- Style for other content -->
			<DataTemplate DataType="{x:Type local:MiscTooltipContent}">
				<controls:RichTextPresenter TextWrapping="Wrap" IsAutoContrasted="True"
					RichText="{Binding Text}" VerticalAlignment="Center" />
			</DataTemplate>

		</Style.Resources>

		<Setter Property="Margin" Value="0" />
		<Setter Property="local:Styling.ShouldStyleParentListBox" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type HeaderedContentControl}">
						<Grid x:Name="Root">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

<!--							<Border BorderThickness="0,0,1,0" Grid.Column="0"-->
<!--								BorderBrush="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowBorderBrushKey}}">-->
<!--								<ContentPresenter ContentSource="Header" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"-->
<!--									TextElement.Foreground="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowTabSelectedTextBrushKey}}"-->
<!--									TextElement.FontSize="{Binding Path=(TextElement.FontSize), ElementName=Root, Converter={x:Static local:SmallFontConverter.Instance}}">-->
<!--									<ContentPresenter.LayoutTransform>-->
<!--										<RotateTransform Angle="-90" />-->
<!--									</ContentPresenter.LayoutTransform>-->
<!--								</ContentPresenter>-->
<!--							</Border>-->

							<ContentPresenter Grid.Column="1"
								TextElement.Foreground="{DynamicResource {x:Static theming:BundledThemeColors+Environment.ToolWindowTextBrushKey}}" />

						</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>